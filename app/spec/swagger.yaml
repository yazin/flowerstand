openapi: 3.0.0
info:
  title: flowerstand
  contact:
    name: Tomoyuki Sato
    url: https://mstdn.schoolidol.club/@yazin
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 0.0.4
servers:
- url: http://localhost:3000/api
paths:
  /flowerstands:
    get:
      summary: searches flower stands. returns all flower stands if no parameter specified.
      parameters:
      - name: eventId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: baseDesignId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: groupId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlowerStand'
        "400":
          description: one or more parameters are not valid.
    post:
      summary: creates a new flower stand.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowerStandWithKeys'
        "204":
          description: baseDesignId or eventId does not exists.
  /flowerstands/verify:
    post:
      summary: verify admin key.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: flower stand with specified id does not exists.
        "401":
          description: invalid adminKey.
  /flowerstands/preview:
    post:
      summary: returns a preview image.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "204":
          description: baseDesignId or eventId does not exists.
  /flowerstands/{id}:
    get:
      summary: returns a flower stand.
      parameters:
      - name: id
        in: path
        description: id of flower stand.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowerStand'
        "204":
          description: flower stand with specified id does not exists.
    put:
      summary: updates a flower stand.
      parameters:
      - name: id
        in: path
        description: id of flower stand to update.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: flower stand with specified id does not exists.
        "401":
          description: invalid adminKey.
    delete:
      summary: deletes a flower stand.
      parameters:
      - name: id
        in: path
        description: id of flower stand to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: adminKey
        in: query
        description: administration key issued on create flower stand.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "204":
          description: FlowerStand of specified id does not exists.
        "401":
          description: invalid adminKey.
  /basedesigns:
    get:
      summary: returns all base designs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseDesign'
  /basedesigns/{id}:
    get:
      summary: returns a base design.
      parameters:
      - name: id
        in: path
        description: id of base design.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseDesign'
        "204":
          description: base design with specified id not exitsts.
  /events:
    get:
      summary: returns all events.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /events/{id}:
    get:
      summary: returns a event.
      parameters:
      - name: id
        in: path
        description: id of event.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "204":
          description: event with specified id does not exists.
  /groups:
    get:
      summary: returns all groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
  /groups/{id}:
    get:
      summary: returns a group.
      parameters:
      - name: id
        in: path
        description: id of group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "204":
          description: group with specified id does not exists.
  /participants:
    get:
      summary: returns all perticipants for a specified flower stand.
      parameters:
      - name: flowerStandId
        in: query
        description: id of flower stand to get participants.
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        "204":
          description: flower stand with specified id does not exists.
        "400":
          description: flowerStandId is not specified or invalid.
    post:
      summary: add a new participant to flower stand.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: flower stand with specified id does not exists.
        "401":
          description: invalid participationCode.
  /participants/{id}:
    get:
      summary: returns a participant.
      parameters:
      - name: id
        in: path
        description: id of participant.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        "204":
          description: participant with specified id does not exists.
    delete:
      summary: delete participant from flower stand.
      parameters:
      - name: id
        in: path
        description: id of participant to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: adminKey
        in: query
        description: administration key issued on create flower stand.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "204":
          description: participant with specified id does not exists.
        "401":
          description: invalid adminKey.
components:
  schemas:
    FlowerStand:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        presentTo:
          type: string
        presentFrom:
          type: string
        event:
          $ref: '#/components/schemas/Event'
        description:
          type: string
        projectUrl:
          type: string
        organizerName:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        baseDesign:
          $ref: '#/components/schemas/BaseDesign'
        imageUrl:
          type: string
    FlowerStandWithKeys:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        presentTo:
          type: string
        presentFrom:
          type: string
        event:
          $ref: '#/components/schemas/Event'
        description:
          type: string
        projectUrl:
          type: string
        organizerName:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        baseDesign:
          $ref: '#/components/schemas/BaseDesign'
        imageUrl:
          type: string
        adminKey:
          type: string
        participationCode:
          type: string
    Participant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        twitterId:
          type: string
        instagramId:
          type: string
        facebookId:
          type: string
        mastodonId:
          type: string
    BaseDesign:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        imageUrl:
          type: string
        sortOrder:
          type: integer
        group:
          $ref: '#/components/schemas/Group'
    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    body:
      required:
      - baseDesignId
      - eventId
      - name
      - organizerName
      - presentFrom
      - presentTo
      type: object
      properties:
        name:
          type: string
        presentTo:
          type: string
        presentFrom:
          type: string
        organizerName:
          type: string
        description:
          type: string
        projectUrl:
          type: string
        baseDesignId:
          type: integer
        eventId:
          type: integer
        panel:
          type: string
          description: optional illust panel image (jpeg or png), Data URI format.
    body_1:
      required:
      - adminKey
      - flowerStandId
      type: object
      properties:
        flowerStandId:
          type: integer
        adminKey:
          type: string
    body_2:
      required:
      - baseDesignId
      - presentFrom
      - presentTo
      type: object
      properties:
        presentTo:
          type: string
        presentFrom:
          type: string
        baseDesignId:
          type: number
        eventId:
          type: number
        panel:
          type: string
          description: optional illust panel image (jpeg or png), Data URI format.
    inline_response_200:
      type: object
      properties:
        imageUrl:
          type: string
          description: URL of preview image.
    body_3:
      required:
      - adminKey
      type: object
      properties:
        adminKey:
          type: string
          description: administration key issued on create flower stand.
        name:
          type: string
          description: name of flower stand.
        presentTo:
          type: string
          description: recipient name to be displayed on flower stand.
        presentFrom:
          type: string
          description: presenter name to be displayed on flower stand.
        organizerName:
          type: string
          description: organizer name of flower stand. this is not displayed on flower
            stand.
        description:
          type: string
          description: description of flower stand.
        projectUrl:
          type: string
          description: URL of flower stand project.
    body_4:
      required:
      - flowerStandId
      - name
      - participationCode
      type: object
      properties:
        name:
          type: string
        flowerStandId:
          type: integer
        participationCode:
          type: string
        twitterId:
          type: string
        instagramId:
          type: string
        facebookId:
          type: string
        mastodonId:
          type: string
